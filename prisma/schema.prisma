generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Catagories {
  catagoryID Int       @id(map: "PK__Catagori__0F3282E157F6BED6") @default(autoincrement())
  catagory   String    @db.VarChar(255)
  Recipes    Recipes[]
}

model Countries {
  countryID Int       @id(map: "PK__Countrie__D320769C5C5C23DB") @default(autoincrement())
  country   String    @db.VarChar(255)
  Recipes   Recipes[]
}

model ingredientMeasurements {
  ingredientMeasurementID Int                 @id(map: "PK__ingredie__4A094F909F69D227") @default(autoincrement())
  ingredientName          String              @db.VarChar(255)
  measurementSize         String              @db.VarChar(255)
  measurementTypeID       Int
  ingredientID            Int
  Ingredients             Ingredients         @relation(fields: [ingredientID], references: [ingredientID], onUpdate: NoAction, map: "FK__ingredien__ingre__45F365D3")
  measurementType         measurementType     @relation(fields: [measurementTypeID], references: [measurementTypeID], onUpdate: NoAction, map: "FK__ingredien__measu__44FF419A")
  RecipeIngredients       RecipeIngredients[]
}

model Ingredients {
  ingredientID           Int                      @id(map: "PK__Ingredie__2753A6C7DB56B5D7") @default(autoincrement())
  ingredientName         String                   @db.VarChar(255)
  ingredientDescription  String?                  @db.VarChar(255)
  ingredientInfoURL      String?                  @db.VarChar(255)
  ingredientMeasurements ingredientMeasurements[]
}

model measurementType {
  measurementTypeID      Int                      @id(map: "PK__measurem__8AF905ACB3CD8ED0") @default(autoincrement())
  measurementType        String                   @db.VarChar(255)
  ingredientMeasurements ingredientMeasurements[]
}

model RecipeIngredients {
  recipeIngredientsID     Int                    @id(map: "PK__RecipeIn__316CB41259A9A915") @default(autoincrement())
  recipeID                Int
  ingredientMeasurementID Int
  ingredientMeasurements  ingredientMeasurements @relation(fields: [ingredientMeasurementID], references: [ingredientMeasurementID], onUpdate: NoAction, map: "FK__RecipeIng__ingre__4E88ABD4")
  Recipes                 Recipes                @relation(fields: [recipeID], references: [RecipeID], onUpdate: NoAction, map: "FK__RecipeIng__recip__4D94879B")
}

model Recipes {
  RecipeID               Int                 @id(map: "PK__Recipes__FDD988D003487EF5") @default(autoincrement())
  RecipeName             String              @db.VarChar(255)
  RecipeDecsription      String              @db.VarChar(255)
  RecipeDifficultyRating Int?
  RecipePrepTime         String?             @db.VarChar(255)
  RecipeCookTime         String?             @db.VarChar(255)
  ServingNumber          Int
  RecipeSource           String?             @db.VarChar(255)
  catagoryID             Int?
  countryID              Int?
  regionID               Int?
  defectID               Int?
  Catagories             Catagories?         @relation(fields: [catagoryID], references: [catagoryID], onDelete: NoAction, onUpdate: NoAction, map: "FK__Recipes__catagor__5AEE82B9")
  Countries              Countries?          @relation(fields: [countryID], references: [countryID], onDelete: NoAction, onUpdate: NoAction, map: "FK__Recipes__country__5DCAEF64")
  Regions                Regions?            @relation(fields: [regionID], references: [regionID], onDelete: NoAction, onUpdate: NoAction, map: "FK__Recipes__regionI__60A75C0F")
  RecipeIngredients      RecipeIngredients[]
  RecipeSteps            RecipeSteps[]
}

model RecipeSteps {
  recipeStepID Int     @id(map: "PK__RecipeSt__86116B1A5B4243C1") @default(autoincrement())
  stepNumber   Int
  stepText     String  @db.VarChar(2048)
  recipeID     Int
  Recipes      Recipes @relation(fields: [recipeID], references: [RecipeID], onUpdate: NoAction, map: "FK__RecipeSte__recip__534D60F1")
}

model Regions {
  regionID Int       @id(map: "PK__Regions__15EA9088FCF77BF3") @default(autoincrement())
  region   String    @db.VarChar(255)
  Recipes  Recipes[]
}
