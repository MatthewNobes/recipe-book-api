generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model ingredientMeasurements {
  ingredientMeasurementID Int                 @id(map: "PK__ingredie__4A094F90490B1894") @default(autoincrement())
  ingredientID            Int?
  measurementTypeID       Int?
  measurementSize         Int?
  Ingredients             ingredients?        @relation(fields: [ingredientID], references: [ingredientID], onDelete: NoAction, onUpdate: NoAction, map: "FK__ingredien__ingre__45F365D3")
  measurementType         measurementType?    @relation(fields: [measurementTypeID], references: [measurementTypeID], onDelete: NoAction, onUpdate: NoAction, map: "FK__ingredien__measu__44FF419A")
  recipeIngredients       recipeIngredients[]
}

model measurementType {
  measurementTypeID      Int                      @id(map: "PK__measurem__8AF905ACFECDFEDA") @default(autoincrement())
  measurementType        String                   @db.VarChar(300)
  ingredientMeasurements ingredientMeasurements[]
}

model categories {
  categoryID Int       @id(map: "PK__categori__23CAF1F85D24E2DF") @default(autoincrement())
  category   String    @db.VarChar(300)
  recipes    recipes[]
}

model countries {
  countryID Int       @id(map: "PK__countrie__D320769CBC2429A2") @default(autoincrement())
  country   String    @db.VarChar(300)
  recipes   recipes[]
}

model ingredients {
  ingredientID           Int                      @id(map: "PK__ingredie__2753A6C76A51B502") @default(autoincrement())
  ingredient             String                   @db.VarChar(300)
  ingredientDescription  String?                  @db.VarChar(3000)
  ingredientInfoURL      String?                  @db.VarChar(3000)
  ingredientMeasurements ingredientMeasurements[]
}

model recipeIngredients {
  recipeIngredientID      Int                     @id(map: "PK__recipeIn__FCBF65CACDBFF6CF") @default(autoincrement())
  recipeID                Int?
  ingredientMeasurementID Int?
  ingredientMeasurements  ingredientMeasurements? @relation(fields: [ingredientMeasurementID], references: [ingredientMeasurementID], onDelete: NoAction, onUpdate: NoAction, map: "FK__recipeIng__ingre__4AB81AF0")
  recipes                 recipes?                @relation(fields: [recipeID], references: [recipeID], onDelete: NoAction, onUpdate: NoAction, map: "FK__recipeIng__recip__49C3F6B7")
}

model recipes {
  recipeID               Int                 @id(map: "PK__recipes__C114EE6342E1FB48") @default(autoincrement())
  recipeName             String              @db.VarChar(300)
  recipeDescription      String              @db.VarChar(3000)
  servingNumber          Int
  recipeSource           String?             @db.VarChar(3000)
  categoryID             Int?
  countryID              Int?
  regionID               Int?
  recipeDifficultyRating Int?
  recipeCookTime         String?             @db.VarChar(30)
  recipePrepTime         String?             @db.VarChar(30)
  recipeIngredients      recipeIngredients[]
  categories             categories?         @relation(fields: [categoryID], references: [categoryID], onDelete: NoAction, onUpdate: NoAction, map: "FK__recipes__categor__3D5E1FD2")
  countries              countries?          @relation(fields: [countryID], references: [countryID], onDelete: NoAction, onUpdate: NoAction, map: "FK__recipes__country__3E52440B")
  regions                regions?            @relation(fields: [regionID], references: [regionID], onDelete: NoAction, onUpdate: NoAction, map: "FK__recipes__regionI__3F466844")
  recipeSteps            recipeSteps[]
}

model recipeSteps {
  recipeStepID Int      @id(map: "PK__recipeSt__86116B1A59637597") @default(autoincrement())
  stepText     String   @db.VarChar(3000)
  stepNumber   Int?
  recipeID     Int?
  recipes      recipes? @relation(fields: [recipeID], references: [recipeID], onDelete: NoAction, onUpdate: NoAction, map: "FK__recipeSte__recip__4D94879B")
}

model regions {
  regionID Int       @id(map: "PK__regions__15EA9088D480DE43") @default(autoincrement())
  region   String    @db.VarChar(300)
  recipes  recipes[]
}
